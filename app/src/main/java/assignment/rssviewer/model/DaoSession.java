package assignment.rssviewer.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import assignment.rssviewer.model.RssSource;
import assignment.rssviewer.model.Category;
import assignment.rssviewer.model.Article;
import assignment.rssviewer.model.SuggestionCategory;
import assignment.rssviewer.model.SuggestionSource;

import assignment.rssviewer.model.RssSourceDao;
import assignment.rssviewer.model.CategoryDao;
import assignment.rssviewer.model.ArticleDao;
import assignment.rssviewer.model.SuggestionCategoryDao;
import assignment.rssviewer.model.SuggestionSourceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig rssSourceDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig articleDaoConfig;
    private final DaoConfig suggestionCategoryDaoConfig;
    private final DaoConfig suggestionSourceDaoConfig;

    private final RssSourceDao rssSourceDao;
    private final CategoryDao categoryDao;
    private final ArticleDao articleDao;
    private final SuggestionCategoryDao suggestionCategoryDao;
    private final SuggestionSourceDao suggestionSourceDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        rssSourceDaoConfig = daoConfigMap.get(RssSourceDao.class).clone();
        rssSourceDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        articleDaoConfig = daoConfigMap.get(ArticleDao.class).clone();
        articleDaoConfig.initIdentityScope(type);

        suggestionCategoryDaoConfig = daoConfigMap.get(SuggestionCategoryDao.class).clone();
        suggestionCategoryDaoConfig.initIdentityScope(type);

        suggestionSourceDaoConfig = daoConfigMap.get(SuggestionSourceDao.class).clone();
        suggestionSourceDaoConfig.initIdentityScope(type);

        rssSourceDao = new RssSourceDao(rssSourceDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        articleDao = new ArticleDao(articleDaoConfig, this);
        suggestionCategoryDao = new SuggestionCategoryDao(suggestionCategoryDaoConfig, this);
        suggestionSourceDao = new SuggestionSourceDao(suggestionSourceDaoConfig, this);

        registerDao(RssSource.class, rssSourceDao);
        registerDao(Category.class, categoryDao);
        registerDao(Article.class, articleDao);
        registerDao(SuggestionCategory.class, suggestionCategoryDao);
        registerDao(SuggestionSource.class, suggestionSourceDao);
    }
    
    public void clear() {
        rssSourceDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        articleDaoConfig.getIdentityScope().clear();
        suggestionCategoryDaoConfig.getIdentityScope().clear();
        suggestionSourceDaoConfig.getIdentityScope().clear();
    }

    public RssSourceDao getRssSourceDao() {
        return rssSourceDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public ArticleDao getArticleDao() {
        return articleDao;
    }

    public SuggestionCategoryDao getSuggestionCategoryDao() {
        return suggestionCategoryDao;
    }

    public SuggestionSourceDao getSuggestionSourceDao() {
        return suggestionSourceDao;
    }

}
